import { HereCall, HereStrategy, SignMessageOptionsLegacy } from "./types";
export declare type HereProviderSign = ({
    network?: string;
    type: "sign";
} & SignMessageOptionsLegacy) | {
    network?: string;
    type: "sign";
    nonce: number[];
    message: string;
    recipient: string;
};
export declare type HereProviderCall = {
    network?: string;
    transactions: HereCall[];
    type: "call";
};
export declare type HereProviderImport = {
    type: "import";
    keystore: string;
    network?: string;
};
export declare type HereProviderKeypom = {
    type: "keypom";
    contract: string;
    secret: string;
};
export declare type HereProviderRequest = HereProviderCall | HereProviderSign | HereProviderImport | HereProviderKeypom;
export interface HereProviderOptions extends HereStrategy {
    id?: string;
    request: HereProviderRequest;
    disableCleanupRequest?: boolean;
    strategy?: HereStrategy;
    signal?: AbortSignal;
}
export declare enum HereProviderStatus {
    APPROVING = 1,
    FAILED = 2,
    SUCCESS = 3
}
export interface HereProviderResult {
    account_id?: string;
    payload?: string;
    topic?: string;
    status: HereProviderStatus;
}
export declare class HereProviderError extends Error {
    readonly payload?: string | undefined;
    readonly parentError?: Error | undefined;
    constructor(payload?: string | undefined, parentError?: Error | undefined);
}
export declare type HereProvider = (options: HereProviderOptions) => Promise<HereProviderResult>;
